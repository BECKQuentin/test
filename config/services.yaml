# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app_env: '%env(APP_ENV)%'
    app_domain: '%env(APP_DOMAIN)%'
    project_name: '%env(PROJECT_NAME)%'
    email_admin: '%env(EMAIL_ADMIN)%'
    email_developer: '%env(EMAIL_DEVELOPER)%'
    email_server: '%env(EMAIL_SERVER)%'
    default_locale: !php/const App\Helper\AppHelper::DEFAULT_LOCALE


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $appEnv: '%app_env%'
            $projectName: '%project_name%'
            $projectDir: '%kernel.project_dir%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Security\AccessDeniedHandler:
        arguments:
            $domain: '%app_domain%'

    App\EventSubscriber\Doctrine\:
        resource: '../src/EventSubscriber/Doctrine/Doctrine*'
        tags:
            - { name: 'doctrine.event_subscriber' }

    App\Service\EmailService:
        arguments:
            $emailAdmin: '%email_admin%'
            $emailDeveloper: '%email_developer%'
            $emailServer: '%email_server%'


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
